[
  {
    "ContainingType": "UsuarioServicio.Api.Controllers.PrivilegioController",
    "Method": "CrearPrivilegio",
    "RelativePath": "api/Privilegio",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "privilegioDto",
        "Type": "UsuarioServicio.Aplicacion.DTOs.CrearPrivilegioDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UsuarioServicio.Api.Controllers.PrivilegioController",
    "Method": "GetAll",
    "RelativePath": "api/Privilegio",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UsuarioServicio.Api.Controllers.PrivilegioController",
    "Method": "Delete",
    "RelativePath": "api/Privilegio/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UsuarioServicio.Api.Controllers.RolController",
    "Method": "CrearRol",
    "RelativePath": "api/Rol",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "rolDto",
        "Type": "UsuarioServicio.Aplicacion.DTOs.CrearRolDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UsuarioServicio.Api.Controllers.RolController",
    "Method": "GetAllRoles",
    "RelativePath": "api/Rol",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UsuarioServicio.Api.Controllers.RolController",
    "Method": "GetPrivilegiosDeRol",
    "RelativePath": "api/Rol/{rolId}/privilegios",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "rolId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UsuarioServicio.Api.Controllers.RolController",
    "Method": "DeleteRol",
    "RelativePath": "api/Rol/roles/{rolId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "rolId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UsuarioServicio.Api.Controllers.RolController",
    "Method": "ModificarRol",
    "RelativePath": "api/Rol/rolUsuario",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "UsuarioServicio.Aplicacion.Command.ModificarRolUsuarioCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UsuarioServicio.Api.Controllers.RolPrivilegioController",
    "Method": "AsignarPrivilegioARol",
    "RelativePath": "api/RolPrivilegio",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "asignacionDto",
        "Type": "UsuarioServicio.Aplicacion.DTOs.AsignarPrivilegioRolDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "UsuarioServicio.Api.Controllers.RolPrivilegioController",
    "Method": "EliminarAsignacion",
    "RelativePath": "api/RolPrivilegio/unassign",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "UsuarioServicio.Aplicacion.Command.EliminarAsignacionPrivilegioCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "UsuarioServicio.Api.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/User",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "UsuarioServicio.Aplicacion.Command.UpdateUserCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "UsuarioServicio.Api.Controllers.UserController",
    "Method": "GetUserByEmail",
    "RelativePath": "api/User/by-email",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "UsuarioServicio.Aplicacion.DTOs.UserDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "UsuarioServicio.Api.Controllers.UserController",
    "Method": "DeleteUserByEmail",
    "RelativePath": "api/User/delete-by-email/{email}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "UsuarioServicio.Api.Controllers.UserController",
    "Method": "ObtenerHistorial",
    "RelativePath": "api/User/historial/{email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[UsuarioServicio.Infraestructura.MongoDB.Documentos.MovimientoUsuarioMongo, UsuarioServicio.Infraestructura, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "UsuarioServicio.Api.Controllers.UserController",
    "Method": "GetAllUsers",
    "RelativePath": "api/User/list",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[UsuarioServicio.Aplicacion.DTOs.UserDto, UsuarioServicio.Aplicacion, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "UsuarioServicio.Api.Controllers.UserController",
    "Method": "Ping",
    "RelativePath": "api/User/ping",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UsuarioServicio.Api.Controllers.UserController",
    "Method": "RegisterUser",
    "RelativePath": "api/User/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "UsuarioServicio.Aplicacion.Command.RegisterUserCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Guid",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 201
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      }
    ]
  },
  {
    "ContainingType": "UsuarioServicio.Api.Controllers.UserController",
    "Method": "RegistrarMovimiento",
    "RelativePath": "api/User/registrar-movimiento",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "UsuarioServicio.Aplicacion.Command.RegistrarMovimientoCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "UsuarioServicio.Api.Controllers.UserController",
    "Method": "ResetPassword",
    "RelativePath": "api/User/reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "UsuarioServicio.Api.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/User/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "command",
        "Type": "UsuarioServicio.Aplicacion.Command.UpdateUserCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "UsuarioServicio.Api.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[UsuarioServicio.Api.WeatherForecast, UsuarioServicio.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]